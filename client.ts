/*
dots api

Scalable and Flexible Payouts Infrastructure

The version of the OpenAPI document: 1.0
Contact: info@dots.dev

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  AppsApi,
  CheckoutSessionsApi,
  DisputesApi,
  FlowsApi,
  PaymentCustomersApi,
  PaymentIntentsApi,
  PaymentMethodsApi,
  PaymentsApi,
  PayoutLinksApi,
  PayoutRequestsApi,
  PayoutsApi,
  RefundsApi,
  TransactionsApi,
  TransferBatchesApi,
  TransfersApi,
  UsersApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { DotsCustom } from "./client-custom";

export class Dots extends DotsCustom {
  readonly apps: AppsApi;
  readonly checkoutSessions: CheckoutSessionsApi;
  readonly disputes: DisputesApi;
  readonly flows: FlowsApi;
  readonly paymentCustomers: PaymentCustomersApi;
  readonly paymentIntents: PaymentIntentsApi;
  readonly paymentMethods: PaymentMethodsApi;
  readonly payments: PaymentsApi;
  readonly payoutLinks: PayoutLinksApi;
  readonly payoutRequests: PayoutRequestsApi;
  readonly payouts: PayoutsApi;
  readonly refunds: RefundsApi;
  readonly transactions: TransactionsApi;
  readonly transferBatches: TransferBatchesApi;
  readonly transfers: TransfersApi;
  readonly users: UsersApi;

  constructor(configurationParameters: ConfigurationParameters) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.apps = new AppsApi(configuration);
    this.checkoutSessions = new CheckoutSessionsApi(configuration);
    this.disputes = new DisputesApi(configuration);
    this.flows = new FlowsApi(configuration);
    this.paymentCustomers = new PaymentCustomersApi(configuration);
    this.paymentIntents = new PaymentIntentsApi(configuration);
    this.paymentMethods = new PaymentMethodsApi(configuration);
    this.payments = new PaymentsApi(configuration);
    this.payoutLinks = new PayoutLinksApi(configuration);
    this.payoutRequests = new PayoutRequestsApi(configuration);
    this.payouts = new PayoutsApi(configuration);
    this.refunds = new RefundsApi(configuration);
    this.transactions = new TransactionsApi(configuration);
    this.transferBatches = new TransferBatchesApi(configuration);
    this.transfers = new TransfersApi(configuration);
    this.users = new UsersApi(configuration);
  }

}
